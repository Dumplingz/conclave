CREATE RELATION in_1([a {1}, b {1}]) {1} WITH COLUMNS (INTEGER, INTEGER)
CLOSEMPC in_1([a {1}, b {1}]) {1} INTO in_1_close([a {1}, b {1}]) {1, 2, 3}
CREATE RELATION in_2([c {1} {2}, d {2}]) {2} WITH COLUMNS (INTEGER, INTEGER)
CLOSEMPC in_2([c {1} {2}, d {2}]) {2} INTO in_2_close([c {1} {2}, d {2}]) {1, 2, 3}
SHUFFLEMPC (in_1_close([a {1}, b {1}]) {1, 2, 3}) AS shuffled_a_hybrid_join_1([a {1}, b {1}]) {1, 2, 3}
PERSISTMPC shuffled_a_hybrid_join_1([a {1}, b {1}]) {1, 2, 3} INTO persisted_a_hybrid_join_1([a {1}, b {1}]) {1, 2, 3}
PROJECTMPC [a] FROM (shuffled_a_hybrid_join_1([a {1}, b {1}]) {1, 2, 3}) AS keys_a_closed_hybrid_join_1([a ]) {1, 2, 3}
OPENMPC keys_a_closed_hybrid_join_1([a ]) {1, 2, 3} INTO keys_a_hybrid_join_1([a ]) {1}
INDEX (keys_a_hybrid_join_1([a ]) {1}) AS indexed_a_hybrid_join_1([index_a , a ]) {1}
SHUFFLEMPC (in_2_close([c {1} {2}, d {2}]) {1, 2, 3}) AS shuffled_b_hybrid_join_1([c {1} {2}, d {2}]) {1, 2, 3}
PERSISTMPC shuffled_b_hybrid_join_1([c {1} {2}, d {2}]) {1, 2, 3} INTO persisted_b_hybrid_join_1([c {1} {2}, d {2}]) {1, 2, 3}
PROJECTMPC [c] FROM (shuffled_b_hybrid_join_1([c {1} {2}, d {2}]) {1, 2, 3}) AS keys_b_closed_hybrid_join_1([c ]) {1, 2, 3}
OPENMPC keys_b_closed_hybrid_join_1([c ]) {1, 2, 3} INTO keys_b_hybrid_join_1([c ]) {1}
INDEX (keys_b_hybrid_join_1([c ]) {1}) AS indexed_b_hybrid_join_1([index_b , c ]) {1}
(indexed_a_hybrid_join_1([index_a , a ]) {1}) JOIN (indexed_b_hybrid_join_1([index_b , c ]) {1}) ON [a] AND [c] AS joined_indices_hybrid_join_1([a , index_a , index_b ]) {1}
PROJECT [index_a, index_b] FROM (joined_indices_hybrid_join_1([a , index_a , index_b ]) {1}) AS indices_only_hybrid_join_1([index_a , index_b ]) {1}
CLOSEMPC indices_only_hybrid_join_1([index_a , index_b ]) {1} INTO indices_closed_hybrid_join_1([index_a , index_b ]) {1, 2, 3}
(persisted_a_hybrid_join_1([a {1}, b {1}]) {1, 2, 3}) IDXJOINMPC (persisted_b_hybrid_join_1([c {1} {2}, d {2}]) {1, 2, 3}) WITH INDECES (indices_closed_hybrid_join_1([index_a , index_b ]) {1, 2, 3}) ON [a] AND [c] AS result([a , b , d ]) {1, 2, 3}
OPENMPC result([a , b , d ]) {1, 2, 3} INTO result_open([a {1,2} {1}, b {1,2} {1}, d {1,2}]) {1}
