# assume rows of hdfs file are indexed by col id's
k_id = int({{{KEYCOL_ID}}})
a_id = int({{{AGGCOL_ID}}})

# get relevant cols by id
keyCol = {{{INREL}}} \
    .filter(lambda x: x[1] == k_id) \
    .flatMap(lambda x: x[0])

aggCol = {{{INREL}}} \
    .filter(lambda x: x[1] == a_id) \
    .flatMap(lambda x: x[0])

data = keyCol.zip(aggCol)

agged = data \
    .mapValues(lambda v: (v, 1)) \
    .reduceByKey(lambda a,b: (a[0]+b[0], a[1]+b[1])) \
    .mapValues(lambda v: v[0]/v[1])

keys = agged.keys()
vals = agged.values()

{{{OUTREL}}} = keys \
    .union(vals) \
    .glom() \
    .zipWithIndex()